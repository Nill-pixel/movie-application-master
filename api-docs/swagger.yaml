openapi: "3.0.3"
info:
  title: Movie API
  version: 1.0.0
  description: API for managing movies
servers:
  - url: http://localhost:8000/api/v1
tags:
  - name: Movies
    description: Operations related to movies
paths:
  /movies:
    get:
      tags:
        - Movies
      summary: List all movies
      responses:
        "200":
          description: A list of movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
    post:
      tags:
        - Movies
      summary: Create a new movie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMovie'
      responses:
        '201':
          description: Movie created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
  /movies/{id}:
    get:
      tags:
        - Movies
      summary: Retrieve a specific movie by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the movie to retrieve
      responses:
        "200":
          description: Movie details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        "404":
          description: Movie not found
    patch:
      tags:
        - Movies
      summary: Update a specific movie
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the movie to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMovie'
      responses:
        '200':
          description: Movie updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        "404":
          description: Movie not found
    delete:
      tags:
        - Movies
      summary: Delete a specific movie
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the movie to delete
      responses:
        '200':
          description: Movie deleted successfully
        "404":
          description: Movie not found
components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: integer
        movieName:
          type: string
        director:
          type: string
        rating:
          type: integer
    NewMovie:
      type: object
      properties:
        movieName:
          type: string
        director:
          type: string
        rating:
          type: integer
